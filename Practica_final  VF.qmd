---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("Tenemos",length(colnames(df_seeds)),"columnas y", length(row.names(df_seeds)), "filas")
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo, labels = c('Kama','Rosa','Canadian' ))

```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_Kama <- df_seeds[df_seeds$tipo=='Kama', ]
paste("La media del area de Kama es de:", round(mean(df_Kama$area),2))
df_Rosa <- df_seeds[df_seeds$tipo=='Rosa', ]
paste("La media del area de Rosa es de:", round(mean(df_Rosa$area),2))
df_Canadian <- df_seeds[df_seeds$tipo=='Canadian', ]
paste("La media del area de Canadian es de:", round(mean(df_Canadian$area),2))
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: '' Se llama BoxPlot y la línea del centro de la caja representa la mediana. "

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x=compacto,y=area, color=tipo))+geom_point(size=3)
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: '' Agrega una nueva columna logica siendo "TRUE" si se cumple la condición tipo igual a "Kama" y "FALSE" para el resto de tipos "

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: '' Conviene dividir los datos al crear un modelo de Machine Learning en dos grupos Train y Test, para con el primero entrenar el modelo con el 70% del conjunto de datos y con el segundo probar el modelo y saber qué tan bien funciona con el 30% restante . "

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: ''Regresión logística"

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}

df_seeds$tipo.n[df_seeds$is_kama=="FALSE"] <- 0
df_seeds$tipo.n[df_seeds$is_kama=="TRUE"] <- 1
head(df_seeds)

model <- glm(data=df_seeds_train, formula= tipo.n ~ area+perimetro+compacto+longitud+ coeficient.asimetria+longitud.ranura, family=binomial(link='logit'))

betalg<-model$coefficients

summary(model)
```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
M<-matrix(rep(0,4),ncol = 2)
umbral <- 0

df_seeds_pred  <- predict(model,df_seeds_test)
y_est=factor(ifelse(df_seeds_pred < umbral,0,1),labels=c("no kama","kama"))


M = table(real=df_seeds_test$is_kama,elegimos=y_est)

paste("La precisión es:",M[2,2]/(M[1,2]+M[2,2]))
paste("La exhaustividad es:",M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: '' Se generan numeros aleatorios y se determina 3 clusters para los tipos de seeds con el método k-means y luego los comparo en una tabla etiquetada"
